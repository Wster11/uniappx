{"version":3,"sources":["uni_modules/em-chat/utssdk/app-android/index.uts"],"sourcesContent":["import {\n\tUTSAndroid\n} from \"io.dcloud.uts\";\nimport Application from 'android.app.Application'\nimport EMOptions from \"com.hyphenate.chat.EMOptions\";\nimport EMClient from \"com.hyphenate.chat.EMClient\";\nimport EMCallBack from 'com.hyphenate.EMCallBack';\nimport EMConnectionListener from 'com.hyphenate.EMConnectionListener';\nimport EMMessage from 'com.hyphenate.chat.EMMessage';\nimport EMMessageListener from 'com.hyphenate.EMMessageListener';\nimport EMTextMessageBody from 'com.hyphenate.chat.EMTextMessageBody';\nimport HyphenateException from 'com.hyphenate.exceptions.HyphenateException';\n\n/**\n * 初始化SDK\n */\nexport function initChat(appkey : string) : void {\n\tconst options = new EMOptions();\n\t// 设置环信AppKey\n\toptions.setAppKey(appkey);\n\t// 关闭自动登录\n\toptions.setAutoLogin(false);\n\tconsole.log(options.getAppKey(), 'getappkey')\n\tEMClient.getInstance().init(UTSAndroid.getAppContext(), options)\n\tEMClient.getInstance().addConnectionListener(new ConnectioonListener());\n\tEMClient.getInstance().chatManager().addMessageListener(new MessageListener());\n}\n\n/**\n * 注册\n */\nexport function createUser(userId : string, password : string) : void {\n\tconsole.log(userId, password, 'createUser params')\n\tnew CreateAccountThread(userId, password).start();\n}\n\n/**\n * 登录\n */\nexport function loginEM(userId : string, password : string) : void {\n\tconsole.log(userId, password, 'login params')\n\tEMClient.getInstance().login(userId, password, new LoginEMCallBack())\n}\n\n/**\n * 登出\n */\nexport function logoutEM() {\n\tEMClient.getInstance().logout(true, new LogoutEMCallBack());\n}\n\n/**\n * 发送文本消息\n */\nexport function sendTextMessage(msg : string, to : string) {\n\tconst message = EMMessage.createTxtSendMessage(msg, to)\n\tEMClient.getInstance().chatManager().sendMessage(message);\n}\n\n/**\n * EM Login回调实现类\n */\nclass LoginEMCallBack extends EMCallBack {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\toverride onError(params0 : Int, params1 : string) : void {\n\t\tconsole.log('login error', params0, params1)\n\t}\n\n\toverride onProgress(params0 : Int, params1 : string) : void {\n\t\tconsole.log('login progress', params0, params1)\n\t}\n\n\toverride onSuccess() : void {\n\t\tconsole.log('login success')\n\t}\n\n}\n\n/**\n * EM Logout 回调实现类\n */\n\nclass LogoutEMCallBack extends EMCallBack {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\toverride onError(params0 : Int, params1 : string) : void {\n\t\tconsole.log('logout error', params0, params1)\n\t}\n\n\toverride onSuccess() : void {\n\t\tconsole.log('logout success')\n\t}\n\n}\n\n/**\n * EM 连接状态 回调实现类\n */\n\nclass ConnectioonListener extends EMConnectionListener {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\toverride onConnected() : void {\n\t\tconsole.log('onConnected 连接成功')\n\t}\n\n\toverride onDisconnected(params0 : Int) : void {\n\t\tconsole.log('onDisconnected 连接断开', params0)\n\t}\n}\n\n/**\n * EM 消息 回调实现类\n */\n\nclass MessageListener extends EMMessageListener {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\toverride onMessageReceived(messages : MutableList<EMMessage>) : void {\n\t\tconsole.log('onMessageReceived 收到消息')\n\t\tmessages.map((msg : EMMessage) => {\n\t\t\tconst type = msg.getType();\n\t\t\tconst msgBody = msg.getBody();\n\t\t\tconsole.log(`msgId: ${msg.getMsgId()},msgFrom:${msg.getFrom()},type:${type}`)\n\t\t\tif (msgBody instanceof EMTextMessageBody) {\n\t\t\t\tconsole.log(`Text Message`, msgBody.getMessage())\n\t\t\t}\n\t\t})\n\t}\n\n}\n/**\n * 子进程\n */\nclass CreateAccountThread extends Thread {\n\tuserId : string\n\tpassword : string\n\tconstructor(userId : string, password : string) {\n\t\tsuper();\n\t\tthis.userId = userId;\n\t\tthis.password = password;\n\t}\n\n\toverride run() {\n\t\t// 同步方法。\n\t\ttry {\n\t\t\tEMClient.getInstance().createAccount(this.userId, this.password);\n\t\t\tconsole.log('注册成功');\n\t\t} catch (e) {\n\t\t\tconst err = e as HyphenateException\n\t\t\tconsole.log(err.getErrorCode(), err.getDescription(), '注册失败')\n\t\t}\n\t}\n}\n"],"names":[],"mappings":"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"}