{"version":3,"sources":["index.uts","App.uvue","uni_modules/em-chat/utssdk/app-ios/index.uts","uni_modules/em-chat/utssdk/app-android/index.uts"],"sourcesContent":["\nimport App from './App.uvue'\r\n\r\nimport { createSSRApp } from 'vue'\r\nexport function createApp() {\r\n\tconst app = createSSRApp(App)\r\n\treturn {\r\n\t\tapp\r\n\t}\r\n}  \nexport function main(app: IApp) {\n    defineAppConfig();\n    definePageRoutes();\n    \n    (createApp()['app'] as VueApp).mount(app);\n}\n\nimport { AppConfig } from \"io.dcloud.uniapp.appframe\"\nexport class UniAppConfig extends AppConfig {\n    override name: string = \"uts-plugin\"\n    override appid: string = \"__UNI__5509411\"\n    override versionName: string = \"1.0.0\"\n    override versionCode: string = \"100\"\n    override uniCompileVersion: string = \"3.98\"\n    // override tabBar = __uniTabBar\n    // override launchPage = __uniLaunchPage\n    \n    constructor() {}\n}\n\nimport GenPagesIndexIndexClass from './pages/index/index.uvue?type=page'\nfunction definePageRoutes() {\n__uniRoutes.push({ path: \"pages/index/index\", component: GenPagesIndexIndexClass, meta: { isQuit: true } as PageMeta, style: utsMapOf([[\"navigationBarTitleText\",\"uni-app x\"]]) } as PageRoute)\n}\nconst __uniTabBar: Map<string, any | null> | null = null\nconst __uniLaunchPage: Map<string, any | null> = utsMapOf([[\"url\",\"pages/index/index\"],[\"style\",utsMapOf([[\"navigationBarTitleText\",\"uni-app x\"]])]])\n@Suppress(\"UNCHECKED_CAST\")\nfunction defineAppConfig(){\n  __uniConfig.entryPagePath = '/pages/index/index'\n  __uniConfig.globalStyle = utsMapOf([[\"navigationBarTextStyle\",\"black\"],[\"navigationBarTitleText\",\"uni-app x\"],[\"navigationBarBackgroundColor\",\"#F8F8F8\"],[\"backgroundColor\",\"#F8F8F8\"]])\n  __uniConfig.tabBar = __uniTabBar as Map<string, any> | null\n  __uniConfig.conditionUrl = ''\n  __uniConfig.uniIdRouter = new Map()\n}\n","\r\n\tlet firstBackTime = 0\r\n\texport default {\r\n\t\tonLaunch: function () {\r\n\t\t\tconsole.log('App Launch')\r\n\t\t},\r\n\t\tonShow: function () {\r\n\t\t\tconsole.log('App Show')\r\n\t\t},\r\n\t\tonHide: function () {\r\n\t\t\tconsole.log('App Hide')\r\n\t\t},\r\n\t\tonLastPageBackPress: function () {\r\n\t\t\tconsole.log('App LastPageBackPress')\r\n\t\t\tif (firstBackTime == 0) {\r\n\t\t\t\tuni.showToast({\r\n\t\t\t\t\ttitle: '再按一次退出应用',\r\n\t\t\t\t\tposition: 'bottom',\r\n\t\t\t\t})\r\n\t\t\t\tfirstBackTime = Date.now()\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tfirstBackTime = 0\r\n\t\t\t\t}, 2000)\r\n\t\t\t} else if (Date.now() - firstBackTime < 2000) {\r\n\t\t\t\tfirstBackTime = Date.now()\r\n\t\t\t\tuni.exit()\r\n\t\t\t}\r\n\t\t},\r\n\t\tonExit: function () {\r\n\t\t\tconsole.log('App Exit')\r\n\t\t},\r\n\t}\r\n\n\nconst GenAppStyles = [utsMapOf([[\"uni-row\", padStyleMapOf(utsMapOf([[\"flexDirection\", \"row\"]]))], [\"uni-column\", padStyleMapOf(utsMapOf([[\"flexDirection\", \"column\"]]))]])]\n","","import {\r\n\tUTSAndroid\r\n} from \"io.dcloud.uts\";\r\nimport Application from 'android.app.Application'\r\nimport EMOptions from \"com.hyphenate.chat.EMOptions\";\r\nimport EMClient from \"com.hyphenate.chat.EMClient\";\nimport EMCallBack from 'com.hyphenate.EMCallBack';\r\n\r\n\r\n\r\n\r\n\r\nexport function initChat(appkey : string) : void {\r\n\tconst options = new EMOptions();\r\n\toptions.setAppKey(appkey);\r\n\tconsole.log(options.getAppKey(), 'getappkey')\r\n\tEMClient.getInstance().init(UTSAndroid.getAppContext(), options)\n\tconsole.log(EMClient.getInstance(), 'EMClient')\r\n\t// EMClient.getInstance().login('sttest', '123', cb)\r\n}\n\n/**\r\n * EM Login回调实现类\r\n */\r\nclass LoginEMCallBack extends EMCallBack {\r\n    reason : string\r\n\tconstructor() {\r\n\t\tsuper();\n\t\tthis.reason = 'init'\r\n\t}\r\n\r\n\t onError(params0 : number, params1 : string) : void {\r\n\t\tconsole.log('login error', params0, params1)\n\t\tthis.reason = params1;\r\n\t}\n\t\n\t onProgress(params0 : number, params1 : string) : void {\n\t\tconsole.log('login progress', params0, params1)\n\t\tthis.reason = params1;\n\t}\n\t\n\toverride onSuccess() : void {\n\t\tconsole.log('login success')\n\t\tthis.reason = 'success';\n\t}\n\r\n}\n\nexport function loginEM(userId: string, password: string) : void {\n\tconsole.log(userId, password, 'login params')\n\tEMClient.getInstance().login(userId, password, new LoginEMCallBack())\n}\n\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAiBA,iCAAS;AAdT,4BAAS;+BCsBD;+BAVA;AAdP,IAAI,wBAAgB,CAAC;AACN;;iBACJ,wBAAY;YACrB,QAAQ,GAAG,CAAC;QACb;;kBACQ,sBAAY;YACnB,QAAQ,GAAG,CAAC;QACb;;eACQ,MAAY;YACnB,QAAQ,GAAG,CAAC;QACb;;4BACqB,MAAY;YAChC,QAAQ,GAAG,CAAC;YACZ,IAAI,iBAAiB,CAAC,EAAE;gBACvB,+BACC,QAAO,YACP,WAAU;gBAEX,gBAAgB,KAAK,GAAG;gBACxB,WAAW,KAAM;oBAChB,gBAAgB,CAAC;gBAClB,GAAG,IAAI;YACR,OAAO,IAAI,KAAK,GAAG,KAAK,gBAAgB,IAAI,EAAE;gBAC7C,gBAAgB,KAAK,GAAG;gBACxB;YACD;QACD;;eACQ,MAAY;YACnB,QAAQ,GAAG,CAAC;QACb;;;;;;;;;;;;uBAIoB,SAAW,aAAW,cAAc,SAAW,mBAAiB,SAAa,gBAAc,cAAc,SAAW,mBAAiB;;;AAH1J;;;;;;;;;;;;;;;AD3BM,IAAS,2BAAY;IAC3B,IAAM,MAAM;IACZ,OAAO;QACN,IAAA,MAAA;KACA;AACF;AACO,IAAS,KAAK,KAAK,IAAI,EAAE;IAC5B;IACA;IAEA,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;AACzC;AAGO,WAAM,eAAqB;IAC9B,aAAS,MAAM,MAAM,GAAG,aAAY;IACpC,aAAS,OAAO,MAAM,GAAG,iBAAgB;IACzC,aAAS,aAAa,MAAM,GAAG,QAAO;IACtC,aAAS,aAAa,MAAM,GAAG,MAAK;IACpC,aAAS,mBAAmB,MAAM,GAAG,OAAM;IAI3C,aAAc,CAAC;AACnB;AAGA,IAAS,mBAAmB;IAC5B,YAAY,IAAI,CAAqK,UAAlK,OAAM,qBAAqB,qCAAoC,OAA0B,SAAlB,SAAQ,IAAI,GAAgB,QAAO,SAAW,4BAAyB;AACjK;AACA,IAAM,aAAa,IAAI,MAAM,EAAE,GAAG,MAAkB,IAAI;AACxD,IAAM,iBAAiB,IAAI,MAAM,EAAE,GAAG,KAAW,SAAW,SAAM,qBAAsB,WAAQ,SAAW,4BAAyB;AACpI,CAAC,SAAS;AAAiB,IAClB,kBAAiB;IACxB,YAAY,aAAa,GAAG;IAC5B,YAAY,WAAW,GAAG,SAAW,4BAAyB,SAAU,4BAAyB,aAAc,kCAA+B,WAAY,qBAAkB;IAC5K,YAAY,MAAM,GAAG,YAAY,EAAE,CAAC,IAAI,MAAM,EAAE,GAAG;IACnD,YAAY,YAAY,GAAG;IAC3B,YAAY,WAAW,GAAG,AAAI;AAChC;;0BG3CC"}