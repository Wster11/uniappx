
























	interface Web {
		connection: any
	}
	
	export default {
		data() {
			return {
				src: '../static/index.html',
				webview_styles: {
					progress: {
						color: '#FF3333'
					}
				},
				webviewContext: null as WebviewContext | null,
				loadError: false,
				conn: null
			}
		},
		onReady() {
			this.webviewContext = uni.createWebviewContext('web-view', this)

		},
		methods: {
			back() {
				this.webviewContext?.back();
			},
			forward() {
				this.webviewContext?.forward();
			},
			reload() {
				this.webviewContext?.reload();
			},
			stop() {
				this.webviewContext?.stop();
			},
			nativeToWeb() {
				this.webviewContext?.evalJS("alert('hello uni-app x')");
			},
			message(event : WebViewMessageEvent) {
	
				if(event.detail.data !== null){
					const data = event.detail.data;
					const websdk:any  = data?.get('websdk') as any;
					this.initSdk(websdk)
				}
				
			},
			initSdk(sdk: any){
				console.log((sdk as Web).connection, 'sdk')
			},
			error(event : WebViewErrorEvent) {
				this.loadError = true
				console.log(JSON.stringify(event));
			},
			loading(event : WebViewLoadingEvent) {
				console.log(JSON.stringify(event));
			},
			loaded(event : WebViewLoadedEvent) {
				console.log(JSON.stringify(event));
			},
			download(event : WebViewDownloadEvent) {
				console.log(JSON.stringify(event));
				uni.showModal({
					content: "下载链接: " + event.detail.url + "\n文件大小: " + event.detail.contentLength / 1024 + "KB",
					showCancel: false
				});
			},
			confirm(event : InputConfirmEvent) {
				console.log(JSON.stringify(event));
				let url = event.detail.value;
				if (!url.startsWith('https://') && !url.startsWith('http://')) {
					url = 'https://' + url;
				}
				this.src = url;
			}
		}
	}


function GenPagesIndexIndexRender(): VNode | null {
const _ctx = this
const _component_button = resolveComponent("button")

  return createElementVNode("view", utsMapOf({ class: "uni-flex-item" }), [
    createElementVNode("web-view", utsMapOf({
      id: "web-view",
      class: "uni-flex-wv",
      src: _ctx.src,
      "webview-styles": _ctx.webview_styles,
      onMessage: _ctx.message,
      onError: _ctx.error,
      onLoading: _ctx.loading,
      onLoaded: _ctx.loaded,
      onDownload: _ctx.download
    }), null, 40 /* PROPS, HYDRATE_EVENTS */, ["src", "webview-styles", "onMessage", "onError", "onLoading", "onLoaded", "onDownload"]),
    createElementVNode("view", utsMapOf({ class: "uni-padding-wrap uni-common-mt" }), [
      createElementVNode("view", utsMapOf({ class: "uni-input-v" }), [
        createElementVNode("input", utsMapOf({
          class: "uni-input",
          confirmType: "go",
          placeholder: "输入网址跳转",
          onConfirm: _ctx.confirm
        }), null, 40 /* PROPS, HYDRATE_EVENTS */, ["onConfirm"])
      ]),
      createElementVNode("view", utsMapOf({ class: "uni-row uni-btn-v" }), [
        createVNode(_component_button, utsMapOf({
          class: "uni-flex-item",
          type: "primary",
          onClick: _ctx.back
        }), utsMapOf({
          default: withCtx((): any[] => ["后退"]),
          _: 1 /* STABLE */
        }), 8 /* PROPS */, ["onClick"]),
        createVNode(_component_button, utsMapOf({
          class: "uni-btn-ml uni-flex-item",
          type: "primary",
          onClick: _ctx.forward
        }), utsMapOf({
          default: withCtx((): any[] => ["前进"]),
          _: 1 /* STABLE */
        }), 8 /* PROPS */, ["onClick"])
      ]),
      createElementVNode("view", utsMapOf({ class: "uni-row uni-btn-v" }), [
        createVNode(_component_button, utsMapOf({
          class: "uni-flex-item",
          type: "primary",
          onClick: _ctx.reload
        }), utsMapOf({
          default: withCtx((): any[] => ["重新加载"]),
          _: 1 /* STABLE */
        }), 8 /* PROPS */, ["onClick"]),
        createVNode(_component_button, utsMapOf({
          class: "uni-btn-ml uni-flex-item",
          type: "primary",
          onClick: _ctx.stop
        }), utsMapOf({
          default: withCtx((): any[] => ["停止加载"]),
          _: 1 /* STABLE */
        }), 8 /* PROPS */, ["onClick"])
      ]),
      createElementVNode("view", utsMapOf({ class: "uni-btn-v" }), [
        createVNode(_component_button, utsMapOf({
          type: "primary",
          onClick: _ctx.nativeToWeb
        }), utsMapOf({
          default: withCtx((): any[] => ["原生和Web通信"]),
          _: 1 /* STABLE */
        }), 8 /* PROPS */, ["onClick"])
      ])
    ])
  ])
}
const GenPagesIndexIndexStyles = [utsMapOf([["uni-flex-wv", padStyleMapOf(utsMapOf([["width", "100%"], ["height", 200]]))], ["uni-input-v", padStyleMapOf(utsMapOf([["padding", "10rpx 0"]]))], ["uni-btn-ml", padStyleMapOf(utsMapOf([["marginLeft", "10rpx"]]))]])]
